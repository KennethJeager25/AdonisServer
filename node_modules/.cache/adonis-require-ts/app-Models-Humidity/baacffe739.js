"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Orm_1 = global[Symbol.for('ioc.use')]("Adonis/Lucid/Orm");
class Humidity extends Orm_1.BaseModel {
}
__decorate([
    (0, Orm_1.column)({ isPrimary: true }),
    __metadata("design:type", Number)
], Humidity.prototype, "id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", Number)
], Humidity.prototype, "entry_id", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", String)
], Humidity.prototype, "field2", void 0);
__decorate([
    (0, Orm_1.column)(),
    __metadata("design:type", typeof (_a = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _a : Object)
], Humidity.prototype, "createdAt", void 0);
__decorate([
    Orm_1.column.dateTime({ autoCreate: true, autoUpdate: true }),
    __metadata("design:type", typeof (_b = typeof luxon_1.DateTime !== "undefined" && luxon_1.DateTime) === "function" ? _b : Object)
], Humidity.prototype, "updatedAt", void 0);
exports.default = Humidity;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSHVtaWRpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJIdW1pZGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxpQ0FBZ0M7QUFDaEMsZ0VBQXlEO0FBRXpELE1BQXFCLFFBQVMsU0FBUSxlQUFTO0NBZTlDO0FBYkM7SUFEQyxJQUFBLFlBQU0sRUFBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7b0NBQ1g7QUFHakI7SUFEQyxJQUFBLFlBQU0sR0FBRTs7MENBQ2M7QUFHdkI7SUFEQyxJQUFBLFlBQU0sR0FBRTs7d0NBQ1k7QUFHckI7SUFEQyxJQUFBLFlBQU0sR0FBRTtrREFDUyxnQkFBUSxvQkFBUixnQkFBUTsyQ0FBQTtBQUcxQjtJQURDLFlBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQztrREFDdEMsZ0JBQVEsb0JBQVIsZ0JBQVE7MkNBQUE7QUFkNUIsMkJBZUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRlVGltZSB9IGZyb20gJ2x1eG9uJ1xuaW1wb3J0IHsgQmFzZU1vZGVsLCBjb2x1bW4gfSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9Pcm0nXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEh1bWlkaXR5IGV4dGVuZHMgQmFzZU1vZGVsIHtcbiAgQGNvbHVtbih7IGlzUHJpbWFyeTogdHJ1ZSB9KVxuICBwdWJsaWMgaWQ6IG51bWJlclxuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgZW50cnlfaWQ6IG51bWJlclxuXG4gIEBjb2x1bW4oKVxuICBwdWJsaWMgZmllbGQyOiBzdHJpbmdcblxuICBAY29sdW1uKClcbiAgcHVibGljIGNyZWF0ZWRBdDogRGF0ZVRpbWVcblxuICBAY29sdW1uLmRhdGVUaW1lKHsgYXV0b0NyZWF0ZTogdHJ1ZSwgYXV0b1VwZGF0ZTogdHJ1ZSB9KVxuICBwdWJsaWMgdXBkYXRlZEF0OiBEYXRlVGltZVxufVxuIl19